
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Search, Plus, Filter, Users, Star, TrendingUp, AlertCircle } from 'lucide-react';
import { useClients } from '@/hooks/useClients';
import ClientCard from './ClientCard';
import ClientForm from './ClientForm';
import PetsModal from './PetsModal';

export default function ClientsPage() {
  console.log('üé® ClientsPage component rendering...');
  
  const { clients, loading, searchTerm, setSearchTerm, addClient, updateClient, deleteClient } = useClients();
  const [showForm, setShowForm] = useState(false);
  const [editingClient, setEditingClient] = useState(null);
  const [selectedClient, setSelectedClient] = useState(null);
  const [showPetsModal, setShowPetsModal] = useState(false);
  const [tagFilter, setTagFilter] = useState('');
  const [sortBy, setSortBy] = useState('newest');

  console.log('üìä ClientsPage state:', { 
    clientsCount: clients.length, 
    loading, 
    showForm, 
    editingClient: !!editingClient 
  });

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
  const allTags = Array.from(new Set(clients.flatMap(client => client.tags)));

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
  const filteredAndSortedClients = clients
    .filter(client => {
      if (tagFilter && !client.tags.includes(tagFilter)) return false;
      return true;
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'newest':
          return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
        case 'oldest':
          return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();
        case 'name':
          return a.first_name.localeCompare(b.first_name);
        case 'visits':
          return b.total_visits - a.total_visits;
        case 'spent':
          return b.total_spent - a.total_spent;
        default:
          return 0;
      }
    });

  const handleAddClient = () => {
    console.log('‚ûï Add client button clicked');
    setEditingClient(null);
    setShowForm(true);
  };

  const handleEditClient = (client) => {
    console.log('‚úèÔ∏è Edit client:', client.id);
    setEditingClient(client);
    setShowForm(true);
  };

  const handleSubmit = async (formData) => {
    console.log('üíæ Submitting client data:', formData);
    if (editingClient) {
      await updateClient(editingClient.id, formData);
    } else {
      await addClient(formData);
    }
    setShowForm(false);
  };

  const handleViewPets = (client) => {
    setSelectedClient(client);
    setShowPetsModal(true);
  };

  const handleDeleteClient = async (id: string) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞?')) {
      await deleteClient(id);
    }
  };

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const stats = {
    total: clients.length,
    vip: clients.filter(c => c.is_vip).length,
    newThisMonth: clients.filter(c => {
      const created = new Date(c.created_at);
      const now = new Date();
      return created.getMonth() === now.getMonth() && created.getFullYear() === now.getFullYear();
    }).length,
    totalRevenue: clients.reduce((sum, c) => sum + Number(c.total_spent), 0)
  };

  if (loading) {
    console.log('‚è≥ ClientsPage showing loading state');
    return (
      <div className="flex items-center justify-center h-64">
        <div className="flex flex-col items-center gap-4">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
          <div className="text-lg text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...</div>
          <div className="text-sm text-muted-foreground">
            –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞—Ç—è–Ω—É–ª–∞—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
          </div>
        </div>
      </div>
    );
  }

  console.log('‚úÖ ClientsPage rendering main content');

  return (
    <div className="space-y-6">
      {/* Debug info */}
      <div className="bg-muted/50 p-3 rounded text-xs text-muted-foreground">
        <div>Debug Info:</div>
        <div>‚Ä¢ –ö–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {clients.length}</div>
        <div>‚Ä¢ –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {filteredAndSortedClients.length}</div>
        <div>‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏: {loading ? '–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è' : '–∑–∞–≤–µ—Ä—à–µ–Ω–æ'}</div>
        <div>‚Ä¢ –§–æ—Ä–º–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {showForm ? '–¥–∞' : '–Ω–µ—Ç'}</div>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
        <div>
          <h1 className="text-3xl font-bold">–ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</h1>
          <p className="text-muted-foreground">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∏—Ö –ø–∏—Ç–æ–º—Ü–∞–º–∏</p>
        </div>
        
        <Button onClick={handleAddClient} className="bg-gradient-primary">
          <Plus className="h-4 w-4 mr-2" />
          –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
        </Button>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2">
              <Users className="h-5 w-5 text-primary" />
              <div>
                <div className="text-2xl font-bold">{stats.total}</div>
                <div className="text-sm text-muted-foreground">–í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2">
              <Star className="h-5 w-5 text-yellow-500" />
              <div>
                <div className="text-2xl font-bold">{stats.vip}</div>
                <div className="text-sm text-muted-foreground">VIP –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2">
              <TrendingUp className="h-5 w-5 text-green-500" />
              <div>
                <div className="text-2xl font-bold">{stats.newThisMonth}</div>
                <div className="text-sm text-muted-foreground">–ù–æ–≤—ã—Ö –≤ –º–µ—Å—è—Ü–µ</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="flex items-center gap-2">
              <div className="h-5 w-5 rounded-full bg-gradient-primary flex items-center justify-center">
                <span className="text-white text-xs">‚ÇΩ</span>
              </div>
              <div>
                <div className="text-2xl font-bold">{stats.totalRevenue.toLocaleString()}</div>
                <div className="text-sm text-muted-foreground">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="flex flex-col lg:flex-row gap-4">
        <div className="relative flex-1">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
          <Input
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ç–µ–ª–µ—Ñ–æ–Ω—É, email –∏–ª–∏ —Ç–µ–≥–∞–º..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="pl-10"
          />
        </div>

        <div className="flex gap-2">
          <Select value={tagFilter} onValueChange={setTagFilter}>
            <SelectTrigger className="w-40">
              <Filter className="h-4 w-4 mr-2" />
              <SelectValue placeholder="–ü–æ —Ç–µ–≥–∞–º" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="">–í—Å–µ —Ç–µ–≥–∏</SelectItem>
              {allTags.map(tag => (
                <SelectItem key={tag} value={tag}>{tag}</SelectItem>
              ))}
            </SelectContent>
          </Select>

          <Select value={sortBy} onValueChange={setSortBy}>
            <SelectTrigger className="w-40">
              <SelectValue placeholder="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="newest">–ù–æ–≤—ã–µ</SelectItem>
              <SelectItem value="oldest">–°—Ç–∞—Ä—ã–µ</SelectItem>
              <SelectItem value="name">–ü–æ –∏–º–µ–Ω–∏</SelectItem>
              <SelectItem value="visits">–ü–æ –≤–∏–∑–∏—Ç–∞–º</SelectItem>
              <SelectItem value="spent">–ü–æ —Ç—Ä–∞—Ç–∞–º</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>

      {/* –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
      {(tagFilter || searchTerm) && (
        <div className="flex gap-2 flex-wrap">
          {tagFilter && (
            <Badge variant="secondary" className="px-3 py-1">
              –¢–µ–≥: {tagFilter}
              <button
                onClick={() => setTagFilter('')}
                className="ml-2 hover:bg-destructive/20 rounded-full p-0.5"
              >
                <span className="sr-only">–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä</span>
                √ó
              </button>
            </Badge>
          )}
          {searchTerm && (
            <Badge variant="secondary" className="px-3 py-1">
              –ü–æ–∏—Å–∫: "{searchTerm}"
              <button
                onClick={() => setSearchTerm('')}
                className="ml-2 hover:bg-destructive/20 rounded-full p-0.5"
              >
                <span className="sr-only">–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫</span>
                √ó
              </button>
            </Badge>
          )}
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
      {filteredAndSortedClients.length === 0 ? (
        <Card>
          <CardContent className="p-8 text-center">
            <Users className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
            <h3 className="text-lg font-medium mb-2">
              {searchTerm || tagFilter ? '–ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' : '–ü–æ–∫–∞ –Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤'}
            </h3>
            <p className="text-muted-foreground mb-4">
              {searchTerm || tagFilter 
                ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞'
                : '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'
              }
            </p>
            {!searchTerm && !tagFilter && (
              <Button onClick={handleAddClient} className="bg-gradient-primary">
                <Plus className="h-4 w-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
              </Button>
            )}
            
            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
            <div className="mt-6 p-4 bg-muted/50 rounded text-sm text-left">
              <div className="flex items-center gap-2 mb-2">
                <AlertCircle className="h-4 w-4" />
                <span className="font-medium">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:</span>
              </div>
              <div className="space-y-1 text-muted-foreground">
                <div>‚Ä¢ –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {clients.length}</div>
                <div>‚Ä¢ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {filteredAndSortedClients.length}</div>
                <div>‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "{searchTerm}"</div>
                <div>‚Ä¢ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–≥–∞–º: "{tagFilter}"</div>
              </div>
            </div>
          </CardContent>
        </Card>
      ) : (
        <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
          {filteredAndSortedClients.map((client) => (
            <ClientCard
              key={client.id}
              client={client}
              onEdit={handleEditClient}
              onDelete={handleDeleteClient}
              onViewPets={handleViewPets}
            />
          ))}
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      <ClientForm
        client={editingClient}
        open={showForm}
        onClose={() => {
          console.log('‚ùå Closing client form');
          setShowForm(false);
          setEditingClient(null);
        }}
        onSubmit={handleSubmit}
      />

      <PetsModal
        client={selectedClient}
        open={showPetsModal}
        onClose={() => {
          setShowPetsModal(false);
          setSelectedClient(null);
        }}
      />
    </div>
  );
}
