import { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Calendar, Users, Bell, BarChart3, DollarSign, Clock, TrendingUp, AlertCircle, Plus, ChevronRight, Heart, Star, Phone } from "lucide-react";
import { useAuth } from '@/hooks/useAuth';
import { useAppointments } from '@/hooks/useAppointments';
import { useClients } from '@/hooks/useClients';
import { useServices } from '@/hooks/useServices';
import { supabase } from '@/integrations/supabase/client';
import { format, isToday, startOfMonth, endOfMonth } from 'date-fns';
import { ru } from 'date-fns/locale';

const Dashboard = () => {
  const { user } = useAuth();
  const { appointments, loading: appointmentsLoading } = useAppointments();
  const { clients, loading: clientsLoading } = useClients();
  const { services, loading: servicesLoading } = useServices();
  
  const [monthlyRevenue, setMonthlyRevenue] = useState(0);
  const [todayAppointments, setTodayAppointments] = useState([]);
  const [recentClients, setRecentClients] = useState([]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã—Ä—É—á–∫–µ
  useEffect(() => {
    const fetchMonthlyRevenue = async () => {
      try {
        const startDate = startOfMonth(new Date());
        const endDate = endOfMonth(new Date());
        
        const { data, error } = await supabase
          .from('orders')
          .select('total_amount')
          .eq('payment_status', 'paid')
          .gte('created_at', startDate.toISOString())
          .lte('created_at', endDate.toISOString());

        if (!error && data) {
          const total = data.reduce((sum, order) => sum + Number(order.total_amount), 0);
          setMonthlyRevenue(total);
        }
      } catch (error) {
        console.error('Error fetching revenue:', error);
      }
    };

    fetchMonthlyRevenue();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
  useEffect(() => {
    if (!appointmentsLoading && appointments.length > 0) {
      const today = appointments.filter(apt => 
        isToday(new Date(apt.scheduled_date))
      ).sort((a, b) => a.scheduled_time.localeCompare(b.scheduled_time));
      setTodayAppointments(today);
    }
  }, [appointments, appointmentsLoading]);

  // –ù–µ–¥–∞–≤–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—ã
  useEffect(() => {
    if (!clientsLoading) {
      if (clients.length > 0) {
        const recent = clients
          .slice()
          .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())
          .slice(0, 5);
        setRecentClients(recent);
      } else {
        setRecentClients([]);
      }
    }
  }, [clients, clientsLoading]);

  const stats = [
    {
      title: "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏",
      value: todayAppointments.length.toString(),
      change: todayAppointments.filter(apt => apt.status === 'confirmed').length > 0 
        ? `${todayAppointments.filter(apt => apt.status === 'confirmed').length} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ`
        : "–ù–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö",
      icon: Calendar,
      color: "text-primary"
    },
    {
      title: "–î–æ—Ö–æ–¥ –∑–∞ –º–µ—Å—è—Ü",
      value: `‚ÇΩ${monthlyRevenue.toLocaleString()}`,
      change: monthlyRevenue > 0 ? "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏" : "–ù–µ—Ç –ø—Ä–æ–¥–∞–∂",
      icon: DollarSign,
      color: "text-accent"
    },
    {
      title: "–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã",
      value: clients.length.toString(),
      change: `${recentClients.length} –Ω–æ–≤—ã—Ö`,
      icon: Users,
      color: "text-primary"
    },
    {
      title: "–£—Å–ª—É–≥ –¥–æ—Å—Ç—É–ø–Ω–æ",
      value: services.filter(s => s.is_active).length.toString(),
      change: `${services.length} –≤—Å–µ–≥–æ`,
      icon: BarChart3,
      color: "text-primary"
    }
  ];

  const getStatusColor = (status: string) => {
    const colors = {
      'scheduled': 'bg-blue-100 text-blue-800 border-blue-200',
      'confirmed': 'bg-green-100 text-green-800 border-green-200',
      'in_progress': 'bg-yellow-100 text-yellow-800 border-yellow-200',
      'completed': 'bg-purple-100 text-purple-800 border-purple-200',
      'cancelled': 'bg-red-100 text-red-800 border-red-200',
      'no_show': 'bg-gray-100 text-gray-800 border-gray-200'
    };
    return colors[status as keyof typeof colors] || colors.scheduled;
  };

  const getStatusText = (status: string) => {
    const texts = {
      'scheduled': '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞',
      'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
      'in_progress': '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
      'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–∞',
      'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–∞',
      'no_show': '–ù–µ —è–≤–∏–ª—Å—è'
    };
    return texts[status as keyof typeof texts] || status;
  };

  const loading = appointmentsLoading || clientsLoading || servicesLoading;

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-lg text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞...</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="space-y-2">
        <h1 className="text-3xl font-bold">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ó–æ–æ–ø–ª–∞–Ω! üëã
        </h1>
        <p className="text-muted-foreground">
          –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º —Å–∞–ª–æ–Ω–æ–º –≥—Ä—É–º–∏–Ω–≥–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {stats.map((stat, index) => (
          <Card key={index} className="metric-card group animate-fade-in" style={{ animationDelay: `${index * 100}ms` }}>
            <CardContent className="p-0">
              <div className="flex items-center space-x-4">
                <div className="metric-icon group-hover:scale-110 transition-transform duration-200">
                  <stat.icon className={`h-6 w-6 ${stat.color}`} />
                </div>
                <div className="flex-1">
                  <div className="flex items-center justify-between">
                    <p className="text-sm font-medium text-muted-foreground">
                      {stat.title}
                    </p>
                    <TrendingUp className="h-4 w-4 text-green-500 opacity-70" />
                  </div>
                  <div className="flex items-center space-x-2">
                    <h3 className="text-2xl font-bold gradient-text">
                      {stat.value}
                    </h3>
                  </div>
                  <p className="text-xs text-muted-foreground mt-1 flex items-center">
                    <div className="status-dot bg-green-500"></div>
                    {stat.change}
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ */}
        <Card className="enhanced-card animate-slide-up lg:col-span-1">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-4">
            <div>
              <CardTitle className="text-lg flex items-center gap-2">
                <Calendar className="h-5 w-5 text-primary" />
                –ó–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
              </CardTitle>
              <CardDescription className="text-accent font-medium">
                {format(new Date(), 'EEEE, d MMMM', { locale: ru })}
              </CardDescription>
            </div>
            <Button 
              variant="outline" 
              size="sm"
              className="btn-secondary hover:scale-105 transition-transform"
              onClick={() => window.location.href = '/calendar'}
            >
              <Plus className="h-4 w-4 mr-2" />
              –î–æ–±–∞–≤–∏—Ç—å
            </Button>
          </CardHeader>
          <CardContent className="space-y-3">
            {todayAppointments.length > 0 ? (
              todayAppointments.slice(0, 6).map((appointment, index) => (
                <div 
                  key={appointment.id} 
                  className="flex items-center space-x-4 p-4 rounded-lg border border-border/50 hover:border-primary/20 transition-all duration-200 hover:shadow-sm bg-gradient-to-r from-card to-card/50 animate-fade-in-left group"
                  style={{ animationDelay: `${index * 50}ms` }}
                >
                  <div className="flex items-center space-x-2 min-w-0">
                    <div className="p-2 rounded-lg bg-primary/10 group-hover:bg-primary/20 transition-colors">
                      <Clock className="h-4 w-4 text-primary" />
                    </div>
                    <span className="font-medium text-sm whitespace-nowrap">
                      {appointment.scheduled_time.substring(0, 5)}
                    </span>
                  </div>
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center space-x-2">
                      <span className="font-medium text-sm truncate">
                        {appointment.client?.first_name} {appointment.client?.last_name}
                      </span>
                    </div>
                    <div className="text-xs text-muted-foreground truncate">
                      <span className="inline-flex items-center gap-1">
                        <Heart className="h-3 w-3" />
                        {appointment.pet?.name}
                      </span>
                      <span className="mx-1">‚Ä¢</span>
                      {appointment.service?.name}
                    </div>
                  </div>
                  <Badge className={`${getStatusColor(appointment.status)} transition-all duration-200 hover:scale-105`}>
                    {getStatusText(appointment.status)}
                  </Badge>
                </div>
              ))
            ) : (
              <div className="text-center py-8">
                <Calendar className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
                <h3 className="text-lg font-medium mb-2">–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</h3>
                <p className="text-muted-foreground text-sm mb-4">
                  –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
                </p>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => window.location.href = '/calendar'}
                >
                  <Plus className="h-4 w-4 mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
                </Button>
              </div>
            )}
          </CardContent>
        </Card>

        {/* –ù–µ–¥–∞–≤–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—ã */}
        <Card className="enhanced-card animate-slide-up" style={{ animationDelay: '200ms' }}>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-4">
            <div>
              <CardTitle className="text-lg flex items-center gap-2">
                <Users className="h-5 w-5 text-primary" />
                –ù–µ–¥–∞–≤–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—ã
              </CardTitle>
              <CardDescription>
                –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã
              </CardDescription>
            </div>
            <Button 
              variant="outline" 
              size="sm"
              className="btn-secondary hover:scale-105 transition-transform"
              onClick={() => window.location.href = '/clients'}
            >
              <ChevronRight className="h-4 w-4" />
            </Button>
          </CardHeader>
          <CardContent className="space-y-3">
            {recentClients.length > 0 ? (
              recentClients.map((client, index) => (
                <div 
                  key={client.id} 
                  className="flex items-center space-x-4 p-4 rounded-lg border border-border/50 hover:border-primary/20 transition-all duration-200 hover:shadow-sm bg-gradient-to-r from-card to-card/50 animate-fade-in-left group"
                  style={{ animationDelay: `${index * 50}ms` }}
                >
                  <div className="relative">
                    <div className="w-12 h-12 bg-gradient-primary rounded-full flex items-center justify-center text-white font-medium shadow-soft group-hover:shadow-glow transition-shadow">
                      {client.first_name?.[0]}{client.last_name?.[0]}
                    </div>
                    {client.is_vip && (
                      <div className="absolute -top-1 -right-1 w-4 h-4 bg-accent rounded-full flex items-center justify-center">
                        <Star className="h-2.5 w-2.5 text-white" />
                      </div>
                    )}
                  </div>
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center space-x-2">
                      <span className="font-medium text-sm truncate">
                        {client.first_name} {client.last_name}
                      </span>
                      {client.is_vip && (
                        <Badge className="bg-accent/10 text-accent border-accent/20 hover:bg-accent/20 transition-colors">VIP</Badge>
                      )}
                    </div>
                    <div className="text-xs text-muted-foreground">
                      <span className="flex items-center gap-1">
                        <Phone className="h-3 w-3" />
                        {client.phone}
                      </span>
                      <span className="mx-1">‚Ä¢</span>
                      {client.total_visits} –≤–∏–∑–∏—Ç–æ–≤
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-sm font-medium gradient-text">‚ÇΩ{client.total_spent.toLocaleString()}</div>
                    <div className="text-xs text-muted-foreground">–ø–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
                  </div>
                </div>
              ))
            ) : (
              <div className="text-center py-8">
                <Users className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
                <h3 className="text-lg font-medium mb-2">–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤</h3>
                <p className="text-muted-foreground text-sm mb-4">
                  –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
                </p>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => window.location.href = '/clients'}
                >
                  <Plus className="h-4 w-4 mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
                </Button>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
          <CardDescription>
            –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button 
              variant="outline" 
              className="h-20 flex flex-col items-center justify-center space-y-2"
              onClick={() => window.location.href = '/calendar'}
            >
              <Plus className="h-5 w-5" />
              <span className="text-sm">–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å</span>
            </Button>
            <Button 
              variant="outline" 
              className="h-20 flex flex-col items-center justify-center space-y-2"
              onClick={() => window.location.href = '/clients'}
            >
              <Users className="h-5 w-5" />
              <span className="text-sm">–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞</span>
            </Button>
            <Button 
              variant="outline" 
              className="h-20 flex flex-col items-center justify-center space-y-2"
              onClick={() => window.location.href = '/notifications'}
            >
              <Bell className="h-5 w-5" />
              <span className="text-sm">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</span>
            </Button>
            <Button 
              variant="outline" 
              className="h-20 flex flex-col items-center justify-center space-y-2"
              onClick={() => window.location.href = '/analytics'}
            >
              <BarChart3 className="h-5 w-5" />
              <span className="text-sm">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∑–∞–¥–∞—á–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <AlertCircle className="h-5 w-5 text-yellow-500" />
              <span>–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <div className="p-3 border-l-4 border-yellow-500 bg-yellow-50">
              <div className="font-medium text-sm">–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ</div>
              <div className="text-xs text-muted-foreground mt-1">
                –í—Å–µ –º–æ–¥—É–ª–∏ CRM –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç
              </div>
            </div>
            <div className="p-3 border-l-4 border-blue-500 bg-blue-50">
              <div className="font-medium text-sm">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
              <div className="text-xs text-muted-foreground mt-1">
                –ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö
              </div>
            </div>
            <div className="p-3 border-l-4 border-green-500 bg-green-50">
              <div className="font-medium text-sm">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</div>
              <div className="text-xs text-muted-foreground mt-1">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ SMS –∏ email –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <div className="p-3 rounded-lg bg-muted/50">
              <div className="font-medium text-sm">üí° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø–∏—Å–µ–π</div>
              <div className="text-xs text-muted-foreground mt-1">
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø–∏—Å–∏
              </div>
            </div>
            <div className="p-3 rounded-lg bg-muted/50">
              <div className="font-medium text-sm">üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂</div>
              <div className="text-xs text-muted-foreground mt-1">
                –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ KPI –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
              </div>
            </div>
            <div className="p-3 rounded-lg bg-muted/50">
              <div className="font-medium text-sm">üéØ –ü—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</div>
              <div className="text-xs text-muted-foreground mt-1">
                –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Dashboard;